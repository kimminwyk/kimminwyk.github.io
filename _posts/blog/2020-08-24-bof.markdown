---
layout: post
title:  "pwn buffer overFlow"
date:   2020-08-24 16:24
categories: blog
---

### Buffer OverFlow(BOF)

##### buffer overflow(버퍼오버플로) : C,C++ 에서 버퍼에 입력받았을 때 이 해당 버퍼가 흘러넘쳐 다른 변수 또는 메모리를 덮어 씌우게 되는 버그이다.

##### Languages ​​vulnerable to buffer overflow : C / C++

##### buffer : buffer는 데이터를 보관하는 메모리의 영억이다.

##### buffer vulnerability function 

##### ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

##### gets(char \*s)

##### scanf(const char \*format, ...)

##### strcpy(char \*dest, const char \*src)

##### strcat(char \*dest, const char \*src)

##### ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

##### 등의 buffer OverFlow에 취약점 함수가 있다.

##### How to secure coding?

##### ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

##### gets - fgets(char \*buffer, int size, FILE \*stream)

##### scanf - fscanf(FILE\* stream, const char\* format, ...)

##### strcpy - strncpy(char \*destination, const char \*source, size_t n)

##### strcat - strncat(char \*destination, const char \*source, size_t n)

##### ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

###### tip ) Visual Studio 를 사용하는 사람같은 경우에는 scanf\_s 같은 \_s 가 붙어있는것을 확인할 수가있다. 하지만 이것은 표준 함수가 아닌 Visual Studio 에서만 지원하는 함수이다.

예를들어 C언어에서 

char hello[7]; 

char world[10];

변수 선언한 다음 고의로 a 문자를 10번 입력하면

hello 라는 변수에서는 a 라는 문자가 꽉차게 되버리고 버퍼에는 a 가 3개 남게 되는것이다.

근데 만약에 hello 변수 선언한 다음 world 라는 변수를 만들게 되버리면 world 변수에는 

"aaa"

이런식으로 남게 되는것이다.

![buffer](/blog_img/buffer_test.png)

이런식으로 c언어에서 이렇게 변수 선언과 입력을 받은다음에 world 변수를 출력해보았다.

![bof_test](/blog_img/scanf.png)

위 사진처럼 a 라는것을 10번 입력하고 world 변수를 출력 결과를 보니 aaa 라는것이 버퍼에 남게되면서 world 변수에 덮어버리게 되는것이다.

###### 밑의 사진처럼 변수들의 배열 공간이 각각 생기게 되는것이다.

![hello_world](/blog_img/null.png)

###### 그리고 a 문자를 10번 입력하면서 hello 의 변수 공간에는 꽉 채우게 되고 

###### world 변수에 버퍼에의해 덮어지게된다.

![bof_scanf](/blog_img/scanf_bof.png)

![scanf_value](/blog_img/injection.png)
